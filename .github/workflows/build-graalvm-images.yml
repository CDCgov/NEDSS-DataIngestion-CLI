name: CLI GraalVM Native Image Builds
#on: [push, pull_request]
on:
  push:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - '*'
  pull_request:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - '*'

jobs:
  build:
    name: Data Ingestion CLI build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: CLI Native Image build using gradle
        run: ./gradlew nativeCompile

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: us-east-1

      - if: matrix.os == 'macos-latest'
        name: Copy macos binary image to destination folder
        run: |
          ls
          mkdir -p dataingestion-cli-binary-images
          pwd
          cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-macos dataingestion-cli-binary-images/
          ls dataingestion-cli-binary-images/
          zip -r dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-macos.zip dataingestion-cli-binary-images
          ls dataingestion-cli-binary-images/

      - name: Upload macos image to S3
        run: aws s3 cp dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-macos.zip s3://graalvm-images-store-dataingestion-cli/macos-image/

#      - name: Upload linux image to S3
#        run: aws s3 cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-linux s3://graalvm-images-store-dataingestion-cli/linux-image/
#
#      - name: Upload windows image to S3
#        run: aws s3 cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-windows.exe s3://graalvm-images-store-dataingestion-cli/windows-image/

#      - if: matrix.os == 'ubuntu-latest'
#        name: Copy linux binary image to destination folder
#        run: |
#          ls
#          mkdir -p dataingestion-cli-binary-images
#          pwd
#          cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-linux dataingestion-cli-binary-images/
#          ls dataingestion-cli-binary-images
#      #          ls dataingestion-cli-binary-images/${{ matrix.os }}
#
#      - if: matrix.os == 'macos-latest'
#        name: Copy macos binary image to destination folder
#        run: |
#          ls
#          mkdir -p dataingestion-cli-binary-images
#          pwd
#          cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-macos dataingestion-cli-binary-images/
#          ls dataingestion-cli-binary-images
#      #          ls dataingestion-cli-binary-images/${{ matrix.os }}
#
#      - if: matrix.os == 'windows-latest'
#        name: Copy windows binary image to destination folder
#        run: |
#          ls
#          mkdir -p dataingestion-cli-binary-images
#          pwd
#          cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI-windows.exe dataingestion-cli-binary-images/
#          ls dataingestion-cli-binary-images
#      #          ls dataingestion-cli-binary-images/${{ matrix.os }}
#      #
#      #      - name: Get current date and time
#      #        run: echo "DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
#      #
#
#      - if: matrix.os == 'macos-latest'
#        name: Compress zip file for macos
#        run: |
#          ls
#          zip -r dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-macos.zip dataingestion-cli-binary-images
#          ls dataingestion-cli-binary-images/
#
#      - if: matrix.os == 'ubuntu-latest'
#        name: Compress zip file for linux
#        run: |
#          ls
#          zip -r dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-linux.zip dataingestion-cli-binary-images
#          ls dataingestion-cli-binary-images/
#
#      - if: matrix.os == 'windows-latest'
#        name: Compress zip file for windows
#        run: |
#          Compress-Archive -Path dataingestion-cli-binary-images/* -Destination dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-windows.zip
#          ls
#
#      - if: matrix.os == 'macos-latest'
#        name: Archive binary image asset for macos
#        uses: actions/upload-artifact@v3
#        with:
#          name: NEDSS-DataIngestion-CLI-macos.zip
#          path: dataingestion-cli-binary-images/
#
#      - if: matrix.os == 'ubuntu-latest'
#        name: Archive binary image asset for linux
#        uses: actions/upload-artifact@v3
#        with:
#          name: NEDSS-DataIngestion-CLI-linux.zip
#          path: dataingestion-cli-binary-images/
#
#      - if: matrix.os == 'windows-latest'
#        name: Archive binary image asset for windows
#        uses: actions/upload-artifact@v3
#        with:
#          name: NEDSS-DataIngestion-CLI-windows.exe.zip
#          path: dataingestion-cli-binary-images/

#      - name: Upload the image generated to the repository (branch - native-built-cli-images)
#        run: |
#          git fetch
#          git checkout native-built-cli-images
#          git status
#          git config user.name "Github Actions"
#          git config user.email "actions@users.noreply.github.com"
#          git add dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-${{ matrix.os }}-${{ env.DATE_TIME }}.zip
#          git commit -m "Upload GraalVM binary image for ${{ matrix.os }}-${{ env.DATE_TIME }}"
#          git push