name: CLI GraalVM Native Image Builds
#on: [push, pull_request]
on:
  push:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - '*'
  pull_request:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - '*'

jobs:
  build:
    name: Data Ingestion CLI build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: CLI Native Image build using gradle
        run: ./gradlew nativeCompile

      - name: Copy binary image to destination folder
        run: |
          ls
          mkdir -p dataingestion-cli-binary-images/${{ matrix.os }}
          pwd
          cp ${{ github.workspace }}/build/native/nativeCompile/NEDSS-DataIngestion-CLI* dataingestion-cli-binary-images/${{ matrix.os }}
          ls dataingestion-cli-binary-images
          ls dataingestion-cli-binary-images/${{ matrix.os }}
#
#      - name: Get current date and time
#        run: echo "DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
#
#      - if: matrix.os == 'windows-latest'
#      - name: Compress zip file in windows
#        run: |
#          Compress-Archive -Path dataingestion-cli-binary-images/* -Destination dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-${{ matrix.os }}-${{ env.DATE_TIME }}.zip
#          ls
#
#      - if: ((matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest'))
#      - name: Compress zip file in unix/linux
#        run: |
#          ls
#          zip -r dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-${{ matrix.os }}-${{ env.DATE_TIME }}.zip dataingestion-cli-binary-images
#          ls
#
##      - name: Zip the CLI Folder
##        run: |
##          ls
##          zip -r dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-${{ matrix.os }}--${{ env.DATE }}.zip dataingestion-cli-binary-images
##          ls
#
#      - name: Upload the image generated to the repository (branch - native-built-cli-images)
#        run: |
#          git fetch
#          git checkout native-built-cli-images
#          git status
#          git config user.name "Github Actions"
#          git config user.email "actions@users.noreply.github.com"
#          git add dataingestion-cli-binary-images/NEDSS-DataIngestion-CLI-${{ matrix.os }}-${{ env.DATE_TIME }}.zip
#          git commit -m "Upload GraalVM binary image for ${{ matrix.os }}-${{ env.DATE_TIME }}"
#          git push

#      - if: ((matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest'))
      - name: Archive binary image asset for ${{ matrix.os }}
        uses: actions/upload-artifact@v3
        with:
          name: NEDSS-DataIngestion-CLI-*
          path: build/native/nativeCompile

#      - if: matrix.os == 'windows-latest'
#        name: Archive binary image asset for windows
#        uses: actions/upload-artifact@v3
#        with:
#          name: NEDSS-DataIngestion-CLI.exe
#          path: dataingestion-cli-binary-images/${{ matrix.os }}