name: CLI GraalVM Native Image Builds - Copy
#on: [push, pull_request]
on:
  push:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - 'v*'
  pull_request:
    branches: ["CNDIT-538-dataingestion-cli"]
    tags:
      - 'v*'
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get current date and time
        run: echo "DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ env.DATE_TIME }}
          release_name: Release ${{ github.ref_name }}-${{ matrix.os }}-${{ env.DATE_TIME }}
          draft: false
          prerelease: false

  build:
    name: Data Ingestion CLI build on ${{ matrix.os }}
    needs: create_release
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: CLI Native Image build using gradle
        run: ./gradlew nativeCompile

      - name: Print Release url
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}"
          echo "${{ github.event.release.upload_url }}"
          echo "${{ needs.create_release.outputs.upload_url }}"

      - name: Run ls & pwd
        run: |
          ls
          pwd

      - if: matrix.os == 'windows-latest'
#      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./build/native/nativeCompile
          asset_name: NEDSS-DataIngestion-CLI.exe
          asset_content_type: application/octet-stream
          upload_url: ${{ needs.create_release.outputs.upload_url }}

      - if: ((matrix.os == 'ubuntu-latest') || (matrix.os == 'macos-latest'))
#      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./build/native/nativeCompile
          asset_name: NEDSS-DataIngestion-CLI
          asset_content_type: application/octet-stream
          upload_url: ${{ needs.create_release.outputs.upload_url }}

      - name: Archive binary image asset
        uses: actions/upload-artifact@v3
        with:
          name: NEDSS-DataIngestion-CLI
          path: build/native/nativeCompile/
